{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAjCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBAOF,IALA,IAAMC,EAAWF,EAAEG,cAAcD,SAC3BE,EAAUC,SAASH,EAAiB,OAAEI,MAAO,IAC7CjB,EAASgB,SAASH,EAAgB,MAAEI,MAAO,IAC3CC,EAAQF,SAASH,EAAe,KAAEI,MAAO,IAC3CE,EAAenB,EACVoB,EAAI,EAAGA,EAAIL,EAAQK,IAAI,CACdtB,EAAcsB,EAAI,EAAGD,GAC7BE,MAAK,SAACC,GACZC,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAA6CC,OAApBJ,EAAKvB,SAAS,QAAiB2B,OAAXJ,EAAKtB,MAAM,M,IAEjF2B,OAAM,SAACL,GACNC,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAA0CF,OAApBJ,EAAKvB,SAAS,QAAiB2B,OAAXJ,EAAKtB,MAAM,M,IAE/EmB,GAAgBD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault()\n  \n  const elements = e.currentTarget.elements;\n  const amount =  parseInt(elements['amount'].value, 10);\n  const delay =  parseInt(elements['delay'].value, 10);\n  const step =  parseInt(elements['step'].value, 10);\n  let currentDelay = delay;\n  for (let i = 0; i < amount; i++){\n    const promise = createPromise(i + 1, currentDelay);\n    promise.then((data) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${data.position} in ${data.delay}ms`);\n    })\n    .catch((data) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${data.position} in ${data.delay}ms`);\n    })\n    currentDelay += step;\n  }\n})\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","currentTarget","amount","parseInt","value","step","currentDelay","i","then","data","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.86a3ff1b.js.map"}