{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAUC,EAAUC,EAAQC,GAChCF,IAAaC,GACdC,EAAMC,OAAOC,O,CAzBJC,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAACC,G,kBAQ7B,IAAMC,EAmBV,SAAuBT,EAAUU,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAACZ,WAAUU,UAEnBG,EAAO,CAACb,WAAUU,S,GAEnBA,E,IA9BaQ,CAAcC,EAAI,EAAGC,GACrCX,EAAQY,MAAK,SAACC,GACZC,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAA6CC,OAApBJ,EAAKtB,SAAS,QAAiB0B,OAAXJ,EAAKZ,MAAM,OAC9EX,EAAQoB,EAAI,EAAGlB,EAAQO,E,IAExBmB,OAAM,SAACL,GACNC,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAA0CF,OAApBJ,EAAKtB,SAAS,QAAiB0B,OAAXJ,EAAKZ,MAAM,OAC7EX,EAAUoB,EAAI,EAAGlB,EAAQO,E,IAE7BY,GAAgBS,C,EAhBlBrB,EAAEsB,iBAMF,IALA,IAAMC,EAAWvB,EAAEwB,cAAcD,SAC3B9B,EAASgC,SAASF,EAAiB,OAAEG,MAAO,IAC5CxB,EAAQuB,SAASF,EAAgB,MAAEG,MAAO,IAC1CL,EAAOI,SAASF,EAAe,KAAEG,MAAO,IAC1Cd,EAAeV,EACVyB,EAAI,EAAGA,EAAIlC,EAAQkC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault()\n  const elements = e.currentTarget.elements;\n  const amount = parseInt(elements['amount'].value, 10);\n  const delay = parseInt(elements['delay'].value, 10);\n  const step = parseInt(elements['step'].value, 10);\n  let currentDelay = delay;\n  for (let i = 0; i < amount; i++) {\n    const promise = createPromise(i + 1, currentDelay);\n    promise.then((data) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${data.position} in ${data.delay}ms`);\n      clearForm(i + 1, amount, e);\n    })\n      .catch((data) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${data.position} in ${data.delay}ms`);\n        clearForm(i + 1, amount, e);\n      })\n    currentDelay += step;\n  }\n});\n\nfunction clearForm(position, amount, event){\n  if(position === amount){\n    event.target.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$clearForm","position","amount","event","target","reset","document","querySelector","addEventListener","e","promise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","i","currentDelay","then","data","$parcel$interopDefault","Notify","success","concat","catch","failure","step","preventDefault","elements","currentTarget","parseInt","value","i1","_loop"],"version":3,"file":"03-promises.aadc6fec.js.map"}